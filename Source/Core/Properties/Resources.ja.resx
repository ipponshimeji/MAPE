<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RunningProxyState_Message_FailToRestoreSystemSettings" xml:space="preserve">
    <value>以前のシステム設定の復元に失敗しました: {0}
手動で設定を復元してください。
または、バックアップ'{1}'が存在するならば、「認証プロキシ爆発しろ！」を起動し直すと設定を復元できる可能性があります。</value>
  </data>
  <data name="CommandBase_Message_FailToSaveCredentials" xml:space="preserve">
    <value>認証情報の保存に失敗しました: {0}</value>
  </data>
  <data name="CommandBase_Message_NoSettingsFile" xml:space="preserve">
    <value>設定ファイルが存在しません。</value>
  </data>
  <data name="CommandBase_Message_FailToLoadSettingsFile" xml:space="preserve">
    <value>設定ファイル'{0}'の読み込みに失敗しました: {1}</value>
  </data>
  <data name="CommandBase_Message_InvalidOption" xml:space="preserve">
    <value>不正なオプション'{0}'が指定されました。</value>
  </data>
  <data name="CommandBase_Message_InvalidArgument" xml:space="preserve">
    <value>不正な引数'{0}'が指定されました。</value>
  </data>
  <data name="CommandBase_Message_AnotherInstanceIsRunning" xml:space="preserve">
    <value>既に別の「認証プロキシ爆発しろ！」が起動しています。</value>
  </data>
  <data name="CommandBase_Message_SystemSettingsAreNotRestored" xml:space="preserve">
    <value>前回切替えたシステム設定が復元されていない可能性があります。復元を試みますか？
バックアップは{0}時点のものです。これより後に手動で設定した設定は上書きされます。特に、バックアップが古い場合はご注意ください。
  はい: 復元を行う
  いいえ: 復元を行わず、設定のバックアップを消去する
  キャンセル: 何もしない
</value>
  </data>
  <data name="CLICommandBase_Message_NoSettingsFile" xml:space="preserve">
    <value>保存先の設定ファイルが指定されていないため、設定を保存できません。</value>
  </data>
  <data name="CLICommandBase_Message_StartListening" xml:space="preserve">
    <value>接続待機中です...</value>
  </data>
  <data name="CLICommandBase_Message_StartingNote" xml:space="preserve">
    <value>Ctrl+C で終了します。</value>
  </data>
  <data name="CLICommandBase_Message_Completed" xml:space="preserve">
    <value>終了しました。</value>
  </data>
  <data name="CLICommandBase_Message_NotCompleted" xml:space="preserve">
    <value>終了を確認できませんでした。</value>
  </data>
  <data name="CLICommandBase_Logo_Command" xml:space="preserve">
    <value>認証プロキシ爆発しろ！ (MAPE: May Authentication Proxy Explode)</value>
  </data>
  <data name="CLICommandBase_SaveSettings_Completed" xml:space="preserve">
    <value>設定は'{0}'に保存されました。</value>
  </data>
  <data name="CLICommandBase_AskCredential_Description" xml:space="preserve">
    <value>{0}に対する認証情報が必要です。</value>
  </data>
  <data name="CLICommandBase_AskCredential_UserName" xml:space="preserve">
    <value>ユーザー名: </value>
  </data>
  <data name="CLICommandBase_AskCredential_Password" xml:space="preserve">
    <value>パスワード: </value>
  </data>
  <data name="CLICommandBase_AskCredential_Persistence_Description" xml:space="preserve">
    <value>パスワードの保存方法はどうしますか？</value>
  </data>
  <data name="CLICommandBase_AskCredential_Persistence_Session" xml:space="preserve">
    <value>このhttpセッションのみ保持する</value>
  </data>
  <data name="CLICommandBase_AskCredential_Persistence_Process" xml:space="preserve">
    <value>このアプリケーションの実行中のみ保持する</value>
  </data>
  <data name="CLICommandBase_AskCredential_Persistence_Persistent" xml:space="preserve">
    <value>設定ファイルに暗号化して保存する</value>
  </data>
  <data name="CLICommandBase_AskCredential_Persistence_Prompt" xml:space="preserve">
    <value>選択: </value>
  </data>
  <data name="CLICommandBase_AskCredential_EnableAssumptionMode_Description" xml:space="preserve">
    <value>「Basic認証決めつけモード」を利用しますか？既定値は「利用する」です。</value>
  </data>
  <data name="CLICommandBase_Prompt_YesNo" xml:space="preserve">
    <value>Y, Nのいずれかの文字を入力してください（Y: はい, N: いいえ）:</value>
  </data>
  <data name="CLICommandBase_Prompt_YesNoCancel" xml:space="preserve">
    <value>Y, N, Cのいずれかの文字を入力してください（Y: はい, N: いいえ, C: キャンセル）:</value>
  </data>
  <data name="SystemSettingsSwitcher_NoActualProxy" xml:space="preserve">
    <value>実際のプロキシを自動的に検出することができませんでした。コマンドラインや設定ファイルで明に指定して起動してください。</value>
  </data>
</root>